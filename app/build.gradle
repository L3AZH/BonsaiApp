plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    def STRING = "String"
    def BASE_URL = "BASE_URL"
    def BASIC_AUTH_USERNAME = "BASIC_AUTH_USER"
    def BASIC_AUTH_PASSWORD = "BASIC_AUTH_PASS"
    compileSdk 32

    defaultConfig {
        applicationId "com.l3azh.bonsaiapp"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    flavorDimensions 'bonsai_dimemsion'
    productFlavors {
        debugDev {
            dimension 'bonsai_dimemsion'
            buildConfigField STRING, BASE_URL, readKeyFromLocalProperties("base.url")
            buildConfigField STRING, BASIC_AUTH_USERNAME, readKeyFromLocalProperties("basic.auth.username")
            buildConfigField STRING, BASIC_AUTH_PASSWORD, readKeyFromLocalProperties("basic.auth.password")
        }
    }


}

dependencies {
    def nav_version = "2.4.2"
    def retrofit_version = "2.9.0"
    def okhttp3_version = "4.9.1"
    def room_version = "2.4.2"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //Icon extra
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    //Navigation
    implementation "androidx.navigation:navigation-compose:$nav_version"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //Ok-http3
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    //Room Database
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
}

def readKeyFromLocalProperties(String keyName) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return String.format("%s", properties.getProperty(keyName))
}